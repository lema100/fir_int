#ifndef _FIR_INT_H_
#define _FIR_INT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>

/*
 *
 * Coefficient generated by Iowa Hills Software FIR Filter Designer Ver. 7.0
 * http://www.iowahills.com/
 * http://www.iowahills.com/5FIRFiltersPage.html
 * http://www.iowahills.com/8DownloadPage.html
 *
*/

const double rect32_minph_kaiser6_fc50[] =
{
	0.00187166,	0.00351974,	0.00580243,	0.0087783,
	0.0124677,	0.0168446,	0.0218315,	0.0272984,
	0.0330665,	0.0389165,	0.0446004,	0.049858,
	0.0544336,	0.0580952,	0.060651,	0.0619645,
	0.0619645,	0.060651,	0.0580952,	0.0544336,
	0.049858,	0.0446004,	0.0389165,	0.0330665,
	0.0272984,	0.0218315,	0.0168446,	0.0124677,
	0.0087783,	0.00580243,	0.00351974,	0.00187166,
};

const double rect16_minph_kaiser6_fc50[] =
{
	0.00721055,	0.0173029,	0.0323192,	0.0514453,
	0.0726187,	0.0928287,	0.108747,	0.117527,
	0.117527,	0.108747,	0.0928287,	0.0726187,
	0.0514453,	0.0323192,	0.0173029,	0.00721055,
};

typedef struct
{
	uint32_t taps;
	uint32_t len;
	uint32_t step;
	int32_t *coeff;
	int16_t *out;
} fir_int_ctx_t;

void fir_int_init(fir_int_ctx_t *ctx, double *coeff_f, int32_t *coeff_i, uint32_t taps);
void fir_int_calc(fir_int_ctx_t *ctx, int16_t *in);
void fir_int_bystep_calc(fir_int_ctx_t *ctx, int16_t *in);

#ifdef __cplusplus
}
#endif

#endif
